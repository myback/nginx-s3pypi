load_module modules/ngx_http_js_module.so;

worker_processes  auto;

error_log   /dev/stderr warn;
pid         /tmp/nginx.pid;

events {
    worker_connections  1024;
}

env S3_ACCESS_KEY;
env S3_SECRET_KEY;
env S3_BUCKET;
env S3_ENDPOINT;
env S3_SSL_DISABLE;
env GITLAB_URL;
env DEBUG;

http {
    js_import   s3                  from njs/s3.js;
    js_import   auth                from njs/auth_gitlab.js;
    js_import   checks              from njs/checks.js;

    js_set      $s3_auth            s3.awsSignature;
    js_set      $s3_datetime        s3.dt;
    js_set      $s3_url             s3.s3Url;
    js_set      $s3_ua              s3.ua;
    js_set      $s3_content_sha     s3.pl;
    js_set      $debug              s3.debug;

    js_set      $auth_url           auth.url;

    map $debug $append_log_msg {
        default     'requets="$request" time="$time_iso8601"';
        "~^true$"   'bytes_sent=$bytes_sent request_method=$request_method uri=$uri server_proto=$server_protocol reauest_time=$request_time host=$host msec=$msec referer="$http_referer" user_agent="$http_user_agent" x_forwarder_for="$http_x_forwarded_for"';
    }

    log_format  kv    escape=none   'client_ip=$remote_addr user=$remote_user status=$status body_byte_sent=$body_bytes_sent $append_log_msg';

    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;
    client_body_temp_path           /tmp/client_temp;
    # proxy_temp_path                 /tmp/proxy_temp_path;
    fastcgi_temp_path               /tmp/fastcgi_temp;
    uwsgi_temp_path                 /tmp/uwsgi_temp;
    scgi_temp_path                  /tmp/scgi_temp;

    server_tokens                   off;
    gzip                            off;
    sendfile                        on;
    client_max_body_size            8M;
    subrequest_output_buffer_size   8M;
    proxy_http_version              1.1;

    access_log  /dev/stdout         kv;

    proxy_cache_path /tmp/proxy_cache levels=1:2 keys_zone=s3_cache:10m max_size=1g inactive=7d use_temp_path=off;

    server {
        listen                      8080;

        resolver          8.8.8.8   valid=300s;
        # resolver                    127.0.0.11;  # docker
        resolver_timeout            3s;

        location = /favicon.ico { access_log off; log_not_found off; }

        location = /healthz {
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny  all;

            access_log off;
            log_not_found off;

            js_content checks.healthz;
        }

        location = /auth-provider {
            internal;

            proxy_pass $auth_url;
        }

        location = /auth-request {
            internal;

            js_content auth.auth;
        }

        location ~* /s3-query/(?<s3_path>.*) {
            internal;

            proxy_cache             s3_cache;
            proxy_cache_revalidate  on;
            proxy_cache_lock        on;
            proxy_cache_valid       200 1d;
            proxy_cache_use_stale   error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_bypass      $http_update_pkg;

            proxy_ignore_headers    Set-Cookie;
            add_header              X-Cache-Status          $upstream_cache_status;
            proxy_set_header        X-amz-date              $s3_datetime;
            proxy_set_header        Authorization           $s3_auth;
            proxy_set_header        User-Agent              $s3_ua;
            proxy_set_header        X-Amz-Content-Sha256    $s3_content_sha;
            proxy_set_header        Accept-Encoding         'plain/text';

            proxy_pass              $s3_url/$s3_path;
        }

        location ~ "^/(?<prefix>[\w-]*)[/]?(?<postfix>[\w-\.]*)$" {
            auth_request /auth-request;

            js_content s3.request;
        }
    }
}
