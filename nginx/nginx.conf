load_module modules/ngx_http_js_module.so;

worker_processes  auto;

error_log   /dev/stderr warn;
pid         /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    js_import   s3      from    njs/s3.js;
    js_import   auth    from    njs/auth_gitlab.js;

    js_set      $s3_datetime    s3.date_now;
    js_set      $s3_auth        s3.s3_sign;
    js_set      $s3_endpoint    s3.s3_url;
    js_set      $debug          s3.debug;

    js_set      $auth_url       auth.url;

    map $debug $append_log_msg {
        default     'request="$request" time="$time_iso8601"';
        "~^true$"   'bytes_sent=$bytes_sent request_method=$request_method uri=$uri server_proto=$server_protocol request_time=$request_time host=$host msec=$msec referer="$http_referer" user_agent="$http_user_agent" x_forwarder_for="$http_x_forwarded_for"';
    }

    log_format  kv    escape=none   'client_ip=$remote_addr user=$remote_user status=$status body_byte_sent=$body_bytes_sent $append_log_msg';

    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;
    client_body_temp_path           /tmp/client_temp;
    # proxy_temp_path                 /tmp/proxy_temp_path;
    fastcgi_temp_path               /tmp/fastcgi_temp;
    uwsgi_temp_path                 /tmp/uwsgi_temp;
    scgi_temp_path                  /tmp/scgi_temp;

    server_tokens                   off;
    gzip                            off;
    sendfile                        on;
    client_max_body_size            8M;
    subrequest_output_buffer_size   8M;
    proxy_http_version              1.1;

    access_log  /dev/stdout         kv;

    server {
        listen                      8080;

        resolver                    127.0.0.11 ipv6=off;  # docker
        # resolver                    127.0.0.53 ipv6=off;  # systemd-resolve
        # resolver                    8.8.8.8 ipv6=off valid=300s;
        resolver_timeout            3s;

        location = /favicon.ico { access_log off; log_not_found off; }

        location = /auth-provider {
            internal;

            proxy_pass $auth_url;
        }

        location = /auth {
            internal;

            proxy_set_header Content-Length "";
            proxy_pass_request_body off;

            js_content auth.auth;
        }

        location ~* /s3-query(?<s3_path>/.*) {
            internal;

            proxy_set_header    X-amz-date     $s3_datetime;
            proxy_set_header    Authorization  $s3_auth;

            proxy_pass          $s3_endpoint$s3_path;
        }

        location ~ "^/(?<prefix>[\w-]*)[/]?(?<postfix>[\w-\.]*)$" {
            auth_request /auth;

            js_content s3.request;
        }
    }
}
